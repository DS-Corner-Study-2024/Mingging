1. State 값을 변경하는 코드를 ()라고 한다.
2. 이러한 상태 변화를 구현하는 데 사용하는 리액트 훅에는 ()와 ()가 있다. 
3. 위의 두 리액트 훅의 가장 큰 차이점은 ()이다.
4. useReducer의 배열의 첫 번째 요소에는 ()가, 두 번째 요소는 상태 변화를 촉발하는 ()가 들어간다.
5. dispatch를 호출하면 ()이 실행된다. 
6. 그리고 이 함수가 반환하는 값은 ()이 된다.
7. 상태 변화를 촉발하는 함수 dispatch를 호출하고 인수로 객체를 전달하는데, 이 객체에는 State의 변경 정보가 있다. 이 객체를 ()라고도 부른다.

1. 상태 변화 코드
2. useState, useReducer
3. 컴포넌트와의 분리 가능 여부
4. State 변수, 함수 dispatch
5. 함수 reducer
6. 새로운 State 값
7. action 객체

코드 문제 1
기존에 구현한 TestComp의 카운터에 2씩 증가하고 감소하는 버튼을 추가하라.

import { useReducer } from "react";

function reducer(state, action) {
    switch (action.type) {
        case "INCREASE":
            return state + action.data;
        case "DECREASE":
            return state - action.data;
        case "INIT":
            return 0;
        default:
            return state;
    }
}

function TestComp() {
    const [count, dispatch] = useReducer(reducer, 0);

    return (
        <div>
            <h4>테스트 컴포넌트</h4>
            <div>
                <strong>{count}</strong>
            </div>
            <div>
                <button onClick={() => dispatch({ type: "INCREASE", data: 1 })}>+1</button>
                <button onClick={() => dispatch({ type: "DECREASE", data: 1 })}>-1</button>
                <button onClick={() => dispatch({ type: "INCREASE", data: 2 })}>+2</button>
                <button onClick={() => dispatch({ type: "DECREASE", data: 2 })}>-2</button>
                <button onClick={() => dispatch({ type: "INIT" })}>초기화</button>
            </div>
        </div>
    );
}

export default TestComp;


코드 문제 2
현재의 State 값을 2배로 증가시키는 버튼을 추가하라. (DOUBLE)

import { useReducer } from "react";

function reducer(state, action) {
    switch (action.type) {
        case "INCREASE":
            return state + action.data;
        case "DECREASE":
            return state - action.data;
        case "DOUBLE":
            return state * 2;
        case "INIT":
            return 0;
        default:
            return state;
    }
}

function TestComp() {
    const [count, dispatch] = useReducer(reducer, 0);

    return (
        <div>
            <h4>테스트 컴포넌트</h4>
            <div>
                <strong>{count}</strong>
            </div>
            <div>
                <button onClick={() => dispatch({ type: "INCREASE", data: 1 })}>+1</button>
                <button onClick={() => dispatch({ type: "DECREASE", data: 1 })}>-1</button>
                <button onClick={() => dispatch({ type: "DOUBLE" })}>2배</button>
                <button onClick={() => dispatch({ type: "INIT" })}>초기화</button>
            </div>
        </div>
    );
}

export default TestComp;
